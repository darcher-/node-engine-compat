name: Lint Code on Push and Pull Request

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

permissions:
  contents: write
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install linters
        run: npm install -g markdownlint-cli htmlhint stylelint eslint

      - name: Run linters
        id: lint
        continue-on-error: true
        run: |
          echo "::set-output name=markdownlint::$(markdownlint "**/*.md" --fix 2>&1 || echo 'Failed')"
          echo "::set-output name=htmlhint::$(htmlhint "**/*.html" 2>&1 || echo 'Failed')"
          echo "::set-output name=stylelint::$(stylelint "**/*.css" --fix 2>&1 || echo 'Failed')"
          echo "::set-output name=eslint::$(eslint "**/*.{js,json,yml}" --fix 2>&1 || echo 'Failed')"

      - name: Check for linting issues
        id: lint_check
        run: |
          if [[ "${{ steps.lint.outputs.markdownlint }}" == *"Failed"* ]] || \
             [[ "${{ steps.lint.outputs.htmlhint }}" == *"Failed"* ]] || \
             [[ "${{ steps.lint.outputs.stylelint }}" == *"Failed"* ]] || \
             [[ "${{ steps.lint.outputs.eslint }}" == *"Failed"* ]]; then
            echo "::set-output name=has_issues::true"
            echo "Linting issues were found"
          else
            echo "::set-output name=has_issues::false"
            echo "No linting issues found"
          fi

      - name: Commit linting fixes
        if: steps.lint_check.outputs.has_issues == 'true' && github.event_name == 'push'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff --quiet && git diff --staged --quiet || git commit -m "Fix linting issues"
          git push

      - name: Create PR with fixes
        if: steps.lint_check.outputs.has_issues == 'true' && github.event_name == 'pull_request'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Fix linting issues
          title: Fix linting issues
          body: |
            This PR fixes linting issues automatically.

            Changes were made by the linting workflow.
          branch: fix-lint-${{ github.head_ref }}
          base: ${{ github.head_ref }}

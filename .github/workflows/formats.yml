name: Format Syntax

on:
  pull_request:
    branches:
      - dev
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: 'npm'

      - name: Install Prettier
        run: npm install --global prettier

      - name: Format files
        id: format
        run: |
          prettier --write "**/*.{js,css,html,yml,json,md}"
          echo "::set-output name=format_status::$?"

      - name: Check for formatting changes
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "::set-output name=has_changes::true"
            echo "Formatting changes were made"
          else
            echo "::set-output name=has_changes::false"
            echo "No formatting changes needed"
          fi

      - name: Setup GitHub CLI
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          # Install GitHub CLI if not already installed
          if ! command -v gh &> /dev/null; then
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh
          fi

      - name: Generate GitHub PAT
        if: steps.check_changes.outputs.has_changes == 'true'
        id: generate_pat
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Login to GitHub using the GITHUB_TOKEN
          echo "$GH_TOKEN" | gh auth login --with-token

          # Set the GITHUB_TOKEN as GH_PAT for use in this workflow
          echo "GH_PAT=$GH_TOKEN" >> $GITHUB_ENV

      - name: Commit changes
        if: steps.check_changes.outputs.has_changes == 'true' && github.event_name == 'push'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Format code with Prettier"

          # Use dynamically generated PAT for authentication
          git remote set-url origin https://x-access-token:${{ env.GH_PAT }}@github.com/${{ github.repository }}.git
          git push

      - name: Create PR with formatting changes
        if: steps.check_changes.outputs.has_changes == 'true' && github.event_name == 'pull_request'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ env.GH_PAT }}
          commit-message: Format code with Prettier
          title: Format code with Prettier
          body: |
            This PR applies formatting changes with Prettier.

            Changes were made by the formatting workflow.
          branch: format-${{ github.head_ref }}
          base: ${{ github.head_ref }}

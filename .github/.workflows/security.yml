name: Scan Vulnerabilities

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - dev
      - main
  schedule:
    # Run weekly on Monday at 1:00 AM
    - cron: "0 1 * * 1"

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        id: npm_audit
        continue-on-error: true
        run: |
          AUDIT_RESULT=$(npm audit --json || true)
          echo "$AUDIT_RESULT" > npm-audit-result.json

          # Extract vulnerability counts
          if [[ -s npm-audit-result.json ]]; then
            CRITICAL=$(echo "$AUDIT_RESULT" | jq -r '.metadata.vulnerabilities.critical // 0')
            HIGH=$(echo "$AUDIT_RESULT" | jq -r '.metadata.vulnerabilities.high // 0')
            MODERATE=$(echo "$AUDIT_RESULT" | jq -r '.metadata.vulnerabilities.moderate // 0')
            LOW=$(echo "$AUDIT_RESULT" | jq -r '.metadata.vulnerabilities.low // 0')

            echo "::set-output name=critical::$CRITICAL"
            echo "::set-output name=high::$HIGH"
            echo "::set-output name=moderate::$MODERATE"
            echo "::set-output name=low::$LOW"

            if [[ "$CRITICAL" -gt 0 || "$HIGH" -gt 0 ]]; then
              echo "::set-output name=has_important_issues::true"
            else
              echo "::set-output name=has_important_issues::false"
            fi
          else
            echo "::set-output name=has_important_issues::false"
          fi

      - name: Setup GitHub CLI
        if: github.event_name == 'pull_request' && steps.npm_audit.outputs.has_important_issues == 'true'
        run: |
          # Install GitHub CLI if not already installed
          if ! command -v gh &> /dev/null; then
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh
          fi

      - name: Generate GitHub PAT
        if: github.event_name == 'pull_request' && steps.npm_audit.outputs.has_important_issues == 'true'
        id: generate_pat
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Login to GitHub using the GITHUB_TOKEN
          echo "$GH_TOKEN" | gh auth login --with-token

          # Set the GITHUB_TOKEN as GH_PAT for use in this workflow
          echo "GH_PAT=$GH_TOKEN" >> $GITHUB_ENV

      - name: Generate security report
        run: |
          echo "## Security Scan Results" > security-report.md

          if [[ "${{ steps.npm_audit.outputs.has_important_issues }}" == "true" ]]; then
            echo "⚠️ **Security vulnerabilities detected**" >> security-report.md
          else
            echo "✅ **No critical security issues found**" >> security-report.md
          fi

          echo -e "\n### Vulnerability Summary" >> security-report.md
          echo "| Severity | Count |" >> security-report.md
          echo "| -------- | ----- |" >> security-report.md
          echo "| Critical | ${{ steps.npm_audit.outputs.critical || 0 }} |" >> security-report.md
          echo "| High     | ${{ steps.npm_audit.outputs.high || 0 }} |" >> security-report.md
          echo "| Moderate | ${{ steps.npm_audit.outputs.moderate || 0 }} |" >> security-report.md
          echo "| Low      | ${{ steps.npm_audit.outputs.low || 0 }} |" >> security-report.md

          if [[ -s npm-audit-result.json ]]; then
            echo -e "\n### Recommendations" >> security-report.md
            echo "Run \`npm audit fix\` to automatically fix some issues, or update dependencies manually." >> security-report.md
          fi

      - name: Find Comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/find-comment@v3
        id: find_comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Security Scan Results

      - name: Add or update PR comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-file: security-report.md
          edit-mode: replace

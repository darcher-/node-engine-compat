{
  "errors": {
    "readParseDependencyPackageJson": {
      "title": "⚠️ Warning: Could not process package.json for dependency '{depName}'.",
      "details": "  This occurred after any configured retry attempts. Last error: {errorMessage}",
      "path_checked": "  Path attempted: {depPath}",
      "causes": [
        "  Possible causes:",
        "    - The dependency '{depName}' might not be installed correctly (try 'npm install' or 'yarn install').",
        "    - The package.json file might be corrupted, malformed, or unreadable."
      ]
    },
    "readParseRootPackageJson": {
      "title": "❌ Critical Error: Could not read or parse the main package.json for your project.",
      "path": "  Path checked: {projectPkgPath}",
      "details": "  Last error details: {errorMessage}",
      "context": "  This error occurred after potential retry attempts (if configured) and is preventing the tool from analyzing your project.",
      "solutions": [
        "  Possible solutions:",
        "    - Ensure you are running this script from the root directory of your Node.js project.",
        "    - Verify that 'package.json' exists at '{projectPkgPath}' and is not empty or malformed.",
        "    - Check file permissions for the path."
      ]
    },
    "versionConflict": {
      "title": "❌ Node.js Version Conflict Detected",
      "minRequired": "  Minimum Node.js version required by one or more packages: {globalMin}",
      "maxAllowed": "  Maximum Node.js version allowed by one or more packages: {globalMax}",
      "conflictExplanation": "  Conflict: The minimum required version ({globalMin}) is higher than the maximum allowed version ({globalMax}). No single Node.js version can satisfy all declared 'engines.node' constraints.",
      "solutions": [
        "  To resolve this:",
        "    1. Review 'engines.node' in your project's 'package.json' and in those of its dependencies to find the conflicting declarations.",
        "    2. Consider updating dependencies; newer versions may have more compatible Node.js requirements.",
        "    3. Adjust your project's 'engines.node' in its 'package.json' if it's overly restrictive or directly causing the conflict.",
        "    4. For problematic individual dependencies, check their issue trackers for known compatibility issues or consider seeking alternatives."
      ]
    },
    "retryFailed": {
      "title": "❌ Operation '{operationName}' failed definitively after {totalAttemptsMade} attempts.",
      "details": "  Last error: {errorMessage}"
    },
    "unexpectedError": {
      "title": "❌ An unexpected error occurred during execution.",
      "details": "  Error: {errorMessage}",
      "suggestion": "  If the problem persists, try running with --verbose for more details or check the application logs."
    }
  },
  "info": {
    "determinedRangeMinMax": "✅ Compatible Node.js version range: {globalMin} - {globalMax}",
    "determinedRangeMinOnly": "✅ Compatible Node.js version: >={globalMin}",
    "determinedRangeMaxOnly": "✅ Compatible Node.js version: <={globalMax}",
    "noConstraintsFound": "ℹ️ No specific Node.js version constraints were found in the project or its direct dependencies.",
    "dependencyProcessed": "🔍 Analyzed: {depName} (Node requirement: '{nodeEngine}', Effective: min {min}, max {max})"
  },
  "warn": {
    "retryAttempt": {
      "title": "⚠️ Operation '{operationName}' failed (failure {failureCount} of {maxConfiguredRetries}). Retrying in {delayMs}ms...",
      "details": "  Underlying error: {errorMessage}"
    }
  }
}